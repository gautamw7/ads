#include <iostream>
#include <stack>

using namespace std;

// Function to calculate factorial using stack
unsigned long long factorial(int n) {
    if (n == 0 || n == 1)
        return 1;

    stack<unsigned long long> factorialStack;
    factorialStack.push(1);

    for (int i = 2; i <= n; i++) {
        unsigned long long currentFactorial = factorialStack.top() * i;
        factorialStack.push(currentFactorial);
    }

    return factorialStack.top();
}

// Function to generate Fibonacci series using stack
void fibonacci(int n) {
    if (n <= 0)
        return;

    stack<unsigned long long> fibStack;
    fibStack.push(0);
    fibStack.push(1);

    for (int i = 2; i <= n; i++) {
        unsigned long long a = fibStack.top();
        fibStack.pop();
        unsigned long long b = fibStack.top();
        fibStack.push(a);
        fibStack.push(a + b);
    }

    cout << "Fibonacci series up to " << n << " terms:" << endl;
    while (!fibStack.empty()) {
        cout << fibStack.top() << " ";
        fibStack.pop();
    }
    cout << endl;
}

// Function to convert decimal to binary using stack
string decimalToBinary(int decimal) {
    if (decimal == 0)
        return "0";

    stack<int> binaryStack;

    while (decimal > 0) {
        binaryStack.push(decimal % 2);
        decimal /= 2;
    }

    string binary = "";
    while (!binaryStack.empty()) {
        binary += to_string(binaryStack.top());
        binaryStack.pop();
    }

    return binary;
}

int main() {
    int choice;
    do {
        cout << "Menu:" << endl;
        cout << "1. Factorial of a number" << endl;
        cout << "2. Fibonacci series" << endl;
        cout << "3. Decimal to binary conversion" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                int num;
                cout << "Enter a number to find its factorial: ";
                cin >> num;
                cout << "Factorial of " << num << " is " << factorial(num) << endl;
                break;
            }
            case 2: {
                int terms;
                cout << "Enter the number of terms for Fibonacci series: ";
                cin >> terms;
                fibonacci(terms);
                break;
            }
            case 3: {
                int decimal;
                cout << "Enter a decimal number to convert to binary: ";
                cin >> decimal;
                cout << "Binary representation: " << decimalToBinary(decimal) << endl;
                break;
            }
            case 4: {
                cout << "Exiting program..." << endl;
                break;
            }
            default:
                cout << "Invalid choice. Please enter a valid option." << endl;
        }

    } while (choice != 4);

    return 0;
}
